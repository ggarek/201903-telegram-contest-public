customElements.define("tg-chart-switch",class extends HTMLElement{constructor(){super();const t=document.getElementById("tg-chart-switch").content;this.attachShadow({mode:"open"}).appendChild(t.cloneNode(!0)),this._checked=!0}get checked(){return this._checked}connectedCallback(){if(!this.isConnected)return;const t=this.shadowRoot.getElementById("switch"),e=t=>{const e=new CustomEvent("change",{bubbles:!0,composed:!0,detail:{checked:t}});this.shadowRoot.dispatchEvent(e)};this.shadowRoot.addEventListener("click",()=>{this._checked=!this._checked,t.classList.toggle("on"),e(this.checked)})}}),customElements.define("tg-chart-switches",class extends HTMLElement{constructor(){super();const t=document.getElementById("tg-chart-switches").content;this.attachShadow({mode:"open"}).appendChild(t.cloneNode(!0)),this.switches={},this.state={}}setSwitches(t){this.state.switches=t;const e=this.shadowRoot.getElementById("switches");for(;e.firstChild;)e.removeChild(e.firstChild);const s=Object.keys(t);this.switches=s.reduce((s,c)=>{const o=s[c]=document.createElement("tg-chart-switch"),{style:h,label:n}=t[c];return h.strokeColor&&o.style.setProperty("--marker-color",h.strokeColor),o.shadowRoot.getElementById("title").innerText=n,e.appendChild(s[c]),s},{})}connectedCallback(){this.isConnected&&this.shadowRoot.getElementById("switches").addEventListener("change",t=>{t.stopPropagation();const e=Object.keys(this.switches).reduce((t,e)=>(t[e]=this.switches[e].checked,t),{});this.shadowRoot.dispatchEvent(new CustomEvent("change",{bubbles:!0,composed:!0,detail:e}))})}});
export class Observable{constructor(s){this._unsubscribe=null,this._observer=null,this.subscribers=[];const e=this.subscribers;let r=null;const t={next(s){r||(r=setTimeout(()=>{e.forEach(e=>e.next(s)),r=null},0))}};this.observer=t,this.unsubscribe=s(t)}subscribe(s){if(!this.subscribers.includes(s))return this.subscribers.push(s),{unsubscribe(){this.subscribers.filter(e=>e!==s)}}}}export const listenEventSource=(s,e)=>new Observable(r=>{const t=s=>r.next(s);return s.addEventListener(e,t),()=>{s.removeEventListener(e,t)}});